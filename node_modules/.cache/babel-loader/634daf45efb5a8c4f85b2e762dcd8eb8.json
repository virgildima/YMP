{"ast":null,"code":"var _jsxFileName = \"/Users/virgildima/Desktop/V docs/ymp/src/Demo.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col } from 'react-bootstrap'; // import { emailjs , toast } from 'emailjs-com';\n\nimport emailjs from 'emailjs-com';\nimport { init } from 'emailjs-com';\ninit(\"user_1I17qEirtZkLAh5ed5qOv\");\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nameChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.emailChange = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.messageChange = event => {\n      this.setState({\n        feedback: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //This templateId is created in EmailJS.com\n\n      const templateId = 'basic'; //This is a custom method from EmailJS that takes the information\n      //from the form and sends the email with the information gathered\n      //and formats the email based on the templateID provided.\n\n      this.sendFeedback(templateId, {\n        message: this.state.feedback,\n        name: this.state.name,\n        email: this.state.email\n      });\n    };\n\n    this.sendFeedback = (templateId, variables) => {\n      window.emailjs.send('gmail', templateId, variables).then(res => {\n        // Email successfully sent alert\n        Swal.fire({\n          title: 'Email Successfully Sent',\n          icon: 'success'\n        });\n      }) // Email Failed to send Error alert\n      .catch(err => {\n        Swal.fire({\n          title: 'Email Failed to Send',\n          icon: 'error'\n        });\n        console.error('Email Error:', err);\n      });\n    };\n\n    this.state = {\n      feedback: '',\n      name: '',\n      email: ''\n    };\n  } // saves the user's name entered to state\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"component_content demo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      xl: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"feedback-form\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, \"Your Feedback\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"text-input\",\n      id: \"feedback-entry\",\n      name: \"feedback-entry\",\n      onChange: handleChange,\n      placeholder: \"Enter your feedback here\",\n      required: true,\n      value: feedback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn--cancel\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn--submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      xl: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {\n      REACT_APP_EMAILJS_RECEIVER: receiverEmail,\n      REACT_APP_EMAILJS_TEMPLATEID: template,\n      REACT_APP_EMAILJS_USERID: user\n    } = this.props.env;\n    this.sendFeedback(template, this.props.senderEmail, receiverEmail, this.state.feedback, user);\n    this.setState({\n      formSubmitted: true\n    });\n  }\n\n  sendFeedback(templateId, senderEmail, receiverEmail, feedback, user) {\n    window.emailjs.send('default_service', // default email provider in your EmailJS account\n    templateId, {\n      senderEmail,\n      receiverEmail,\n      feedback\n    }, user).then(res => {\n      this.setState({\n        formEmailSent: true\n      });\n    }) // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Failed to send feedback. Error: ', err));\n  }\n\n}\n\nexport default Demo;","map":{"version":3,"sources":["/Users/virgildima/Desktop/V docs/ymp/src/Demo.js"],"names":["React","Component","Container","Row","Col","emailjs","init","Demo","constructor","props","nameChange","event","setState","name","target","value","emailChange","email","messageChange","feedback","handleSubmit","preventDefault","templateId","sendFeedback","message","state","variables","window","send","then","res","Swal","fire","title","icon","catch","err","console","error","render","handleChange","handleClose","REACT_APP_EMAILJS_RECEIVER","receiverEmail","REACT_APP_EMAILJS_TEMPLATEID","template","REACT_APP_EMAILJS_USERID","user","env","senderEmail","formSubmitted","formEmailSent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Container, Row, Col\n} from 'react-bootstrap';\n// import { emailjs , toast } from 'emailjs-com';\nimport emailjs from 'emailjs-com';\nimport { init } from 'emailjs-com';\ninit(\"user_1I17qEirtZkLAh5ed5qOv\");\n\nclass Demo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            feedback: '',\n            name: '',\n            email: ''\n        };\n    }\n    // saves the user's name entered to state\n    nameChange = (event) => {\n        this.setState({ name: event.target.value })\n    }\n\n    // saves the user's email entered to state\n    emailChange = (event) => {\n        this.setState({ email: event.target.value })\n    }\n\n    // saves the user's message entered to state\n    messageChange = (event) => {\n        this.setState({ feedback: event.target.value })\n    }\n\n    //onSubmit of email form\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        //This templateId is created in EmailJS.com\n        const templateId = 'basic';\n\n        //This is a custom method from EmailJS that takes the information\n        //from the form and sends the email with the information gathered\n        //and formats the email based on the templateID provided.\n        this.sendFeedback(templateId, {\n            message: this.state.feedback,\n            name: this.state.name,\n            email: this.state.email\n        }\n        )\n\n    }\n\n    //Custom EmailJS method\n    sendFeedback = (templateId, variables) => {\n        window.emailjs.send(\n            'gmail', templateId,\n            variables\n        ).then(res => {\n            // Email successfully sent alert\n            Swal.fire({\n                title: 'Email Successfully Sent',\n                icon: 'success'\n            })\n        })\n            // Email Failed to send Error alert\n            .catch(err => {\n                Swal.fire({\n                    title: 'Email Failed to Send',\n                    icon: 'error'\n                })\n                console.error('Email Error:', err)\n            })\n    }\n\n\n    render() {\n        return (\n            <div className=\"component_content demo\">\n                <Container>\n                    <Row>\n                        <Col xs={12} xl={6}>\n                            <form className=\"feedback-form\" onSubmit={handleSubmit}>\n                                <h1>Your Feedback</h1>\n                                <textarea\n                                    className=\"text-input\"\n                                    id=\"feedback-entry\"\n                                    name=\"feedback-entry\"\n                                    onChange={handleChange}\n                                    placeholder=\"Enter your feedback here\"\n                                    required\n                                    value={feedback}\n                                />\n                                <div className=\"btn-group\">\n                                    <button className=\"btn btn--cancel\" onClick={handleClose}>\n                                        Cancel\n                                    </button>\n                                    <input type=\"submit\" value=\"Submit\" className=\"btn btn--submit\" />\n                                </div>\n                            </form>\n\n                            {/* <h2 className=\"text-blue\">Get a demo</h2>\n                            <form>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" id=\"name\" placeholder=\"Name\" className=\"form-control\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" id=\"yacht\" placeholder=\"Yacht\" className=\"form-control\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"email\" id=\"email\" placeholder=\"Email\" className=\"form-control\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" id=\"phone\" placeholder=\"Phone\" className=\"form-control\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" id=\"location\" placeholder=\"Location\" className=\"form-control\"/>\n                                </div>\n                                    <button type=\"submit\" className=\"btn btn-primary\">\n                                        Submit\n                                    </button>\n                                </form> */}\n                        </Col>\n                        <Col xs={12} xl={6}>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault()\n\n        const {\n            REACT_APP_EMAILJS_RECEIVER: receiverEmail,\n            REACT_APP_EMAILJS_TEMPLATEID: template,\n            REACT_APP_EMAILJS_USERID: user\n        } = this.props.env\n\n        this.sendFeedback(\n            template,\n            this.props.senderEmail,\n            receiverEmail,\n            this.state.feedback,\n            user\n        )\n\n        this.setState({\n            formSubmitted: true\n        })\n    }\n\n    sendFeedback(templateId, senderEmail, receiverEmail, feedback, user) {\n        window.emailjs.send(\n            'default_service', // default email provider in your EmailJS account\n            templateId,\n            {\n                senderEmail,\n                receiverEmail,\n                feedback\n            },\n            user\n        )\n            .then(res => {\n                this.setState({ formEmailSent: true })\n            })\n            // Handle errors here however you like, or use a React error boundary\n            .catch(err => console.error('Failed to send feedback. Error: ', err))\n    }\n}\n\nexport default Demo;"]},"metadata":{},"sourceType":"module"}