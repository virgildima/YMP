{"ast":null,"code":"var _jsxFileName = \"/Users/virgildima/Desktop/V docs/ymp/src/Demo.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col } from 'react-bootstrap'; // import { emailjs , toast } from 'emailjs-com';\n\nimport emailjs from 'emailjs-com';\nimport { init } from 'emailjs-com';\ninit(\"user_1I17qEirtZkLAh5ed5qOv\");\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nameChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.emailChange = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.messageChange = event => {\n      this.setState({\n        feedback: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //This templateId is created in EmailJS.com\n\n      const templateId = 'basic'; //This is a custom method from EmailJS that takes the information\n      //from the form and sends the email with the information gathered\n      //and formats the email based on the templateID provided.\n\n      this.sendFeedback(templateId, {\n        message: this.state.feedback,\n        name: this.state.name,\n        email: this.state.email\n      });\n    };\n\n    this.sendFeedback = (templateId, variables) => {\n      window.emailjs.send('gmail', templateId, variables).then(res => {\n        // Email successfully sent alert\n        Swal.fire({\n          title: 'Email Successfully Sent',\n          icon: 'success'\n        });\n      }) // Email Failed to send Error alert\n      .catch(err => {\n        Swal.fire({\n          title: 'Email Failed to Send',\n          icon: 'error'\n        });\n        console.error('Email Error:', err);\n      });\n    };\n\n    this.state = {\n      feedback: '',\n      name: '',\n      email: ''\n    };\n  } // saves the user's name entered to state\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"component_content demo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      xl: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"test-mailing\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: \"1.2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, \"You can also send me an email directly from here\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control email-inputs\",\n      name: \"user_name\",\n      type: \"text\",\n      id: \"name\",\n      onChange: this.nameChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control email-inputs\",\n      name: \"user_email\",\n      type: \"text\",\n      id: \"email\",\n      onChange: this.emailChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, \"Message\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"message\",\n      name: \"message\",\n      onChange: this.messageChange,\n      placeholder: \"Put your message here\",\n      required: true,\n      className: \"email-text-area form-control\",\n      rows: \"15\",\n      cols: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn-outline-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      xl: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  sendMessage(event) {\n    event.preventDefault();\n\n    if (!this.validateMail()) {\n      return;\n    }\n\n    const templateParams = {\n      from_name: this.state.name + \" (\" + this.state.email + \")\",\n      to_name: 'virgildima90@yahoo.com',\n      feedback: this.state.feedback\n    };\n    emailjs.send(\"gmail\", \"portfoliositecontact\", templateParams, 'user_1I17qEirtZkLAh5ed5qOv').then(function (response) {\n      toast.success(\"Your message has successfully sent!\", {\n        position: toast.POSITION.BOTTOM_CENTER\n      });\n      console.log(\"SUCCESS!\", response.status, response.text);\n    }, function (err) {\n      toast.error(\"Your message was not able to be sent\");\n    });\n    this.setState({\n      name: \"\",\n      email: \"\",\n      feedback: \"\"\n    });\n  }\n\n}\n\nexport default Demo;","map":{"version":3,"sources":["/Users/virgildima/Desktop/V docs/ymp/src/Demo.js"],"names":["React","Component","Container","Row","Col","emailjs","init","Demo","constructor","props","nameChange","event","setState","name","target","value","emailChange","email","messageChange","feedback","handleSubmit","preventDefault","templateId","sendFeedback","message","state","variables","window","send","then","res","Swal","fire","title","icon","catch","err","console","error","render","fontSize","sendMessage","validateMail","templateParams","from_name","to_name","response","toast","success","position","POSITION","BOTTOM_CENTER","log","status","text"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Container, Row, Col\n} from 'react-bootstrap';\n// import { emailjs , toast } from 'emailjs-com';\nimport emailjs from 'emailjs-com';\nimport { init } from 'emailjs-com';\ninit(\"user_1I17qEirtZkLAh5ed5qOv\");\n\nclass Demo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            feedback: '',\n            name: '',\n            email: ''\n        };\n    }\n    // saves the user's name entered to state\n    nameChange = (event) => {\n        this.setState({ name: event.target.value })\n    }\n\n    // saves the user's email entered to state\n    emailChange = (event) => {\n        this.setState({ email: event.target.value })\n    }\n\n    // saves the user's message entered to state\n    messageChange = (event) => {\n        this.setState({ feedback: event.target.value })\n    }\n\n    //onSubmit of email form\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        //This templateId is created in EmailJS.com\n        const templateId = 'basic';\n\n        //This is a custom method from EmailJS that takes the information\n        //from the form and sends the email with the information gathered\n        //and formats the email based on the templateID provided.\n        this.sendFeedback(templateId, {\n            message: this.state.feedback,\n            name: this.state.name,\n            email: this.state.email\n        }\n        )\n\n    }\n\n    //Custom EmailJS method\n    sendFeedback = (templateId, variables) => {\n        window.emailjs.send(\n            'gmail', templateId,\n            variables\n        ).then(res => {\n            // Email successfully sent alert\n            Swal.fire({\n                title: 'Email Successfully Sent',\n                icon: 'success'\n            })\n        })\n            // Email Failed to send Error alert\n            .catch(err => {\n                Swal.fire({\n                    title: 'Email Failed to Send',\n                    icon: 'error'\n                })\n                console.error('Email Error:', err)\n            })\n    }\n\n\n    render() {\n        return (\n            <div className=\"component_content demo\">\n                <Container>\n                    <Row>\n                        <Col xs={12} xl={6}>\n                            {/* //Form layout that requires a Name, Email, and message */}\n                            <form className=\"test-mailing\" onSubmit={this.handleSubmit}>\n\n                                <br />\n                                <div style={{ fontSize: \"1.2rem\" }}>\n\n                                    <h6>You can also send me an email directly from here</h6>\n                                    <div>\n                                        <label htmlFor=\"name\">Name</label>\n                                        <input className=\"form-control email-inputs\" name=\"user_name\" type=\"text\"\n                                            id=\"name\" onChange={this.nameChange} required />\n                                    </div>\n\n                                    <div>\n                                        <label htmlFor=\"email\">Email</label>\n                                        <input className=\"form-control email-inputs\" name=\"user_email\" type=\"text\"\n                                            id=\"email\" onChange={this.emailChange} required />\n                                    </div>\n\n                                    <label htmlFor=\"message\">\n                                        Message\n              </label>\n                                    <div>\n                                        <textarea\n                                            id=\"message\"\n                                            name=\"message\"\n                                            onChange={this.messageChange}\n                                            placeholder=\"Put your message here\"\n                                            required\n                                            className=\"email-text-area form-control\"\n                                            rows=\"15\"\n                                            cols=\"20\"\n                                        />\n                                    </div>\n\n                                </div>\n\n                                <input type=\"submit\" value=\"Submit\" className=\"btn btn-outline-light\" />\n                            </form>\n\n\n                            {/* <h2 className=\"text-blue\">Get a demo</h2>\n                            <form>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" id=\"name\" placeholder=\"Name\" className=\"form-control\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" id=\"yacht\" placeholder=\"Yacht\" className=\"form-control\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"email\" id=\"email\" placeholder=\"Email\" className=\"form-control\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" id=\"phone\" placeholder=\"Phone\" className=\"form-control\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" id=\"location\" placeholder=\"Location\" className=\"form-control\"/>\n                                </div>\n                                    <button type=\"submit\" className=\"btn btn-primary\">\n                                        Submit\n                                    </button>\n                                </form> */}\n                        </Col>\n                        <Col xs={12} xl={6}>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n\n    sendMessage(event) {\n        event.preventDefault();\n        if (!this.validateMail()) {\n            return;\n        }\n        const templateParams = {\n            from_name: this.state.name + \" (\" + this.state.email + \")\",\n            to_name:  'virgildima90@yahoo.com',\n            feedback: this.state.feedback\n        };\n        emailjs\n            .send(\"gmail\", \"portfoliositecontact\", templateParams,  'user_1I17qEirtZkLAh5ed5qOv' )\n            .then(\n                function (response) {\n                    toast.success(\"Your message has successfully sent!\", {\n                        position: toast.POSITION.BOTTOM_CENTER\n                    });\n                    console.log(\"SUCCESS!\", response.status, response.text);\n                },\n                function (err) {\n                    toast.error(\"Your message was not able to be sent\");\n                }\n            );\n        this.setState({\n            name: \"\",\n            email: \"\",\n            feedback: \"\"\n        });\n    }\n}\n\nexport default Demo;"]},"metadata":{},"sourceType":"module"}